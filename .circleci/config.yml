version: 2.1

orbs:
  docker: circleci/docker@2.1.1

commands:
  setup_environnement:
    steps:
        - checkout
        - run:
            name: Check Python version and environment
            command: |
              python --version
              pip --version
              echo $PATH
              which python
        - restore_cache:
            keys:
              - deps-{{ checksum "requirements.txt" }}
        - run:
            name: Install dependencies
            command: |
              pip install -r requirements.txt
        - save_cache:
            paths:
              - ~/.cache/pip
            key: deps-{{ checksum "requirements.txt" }}

jobs:
  pytest:
    docker:
      - image: cimg/python:3.12
    steps:
      - setup_environnement
      - run:
          name: Run tests with pytest
          command: pytest
  flake8:
    docker:
      - image: cimg/python:3.12
    steps:
      - setup_environnement
      - run:
          name: Run Flake8
          command: flake8

  build-and-push-docker:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - docker/check
      - run:
          name: Build docker image
          command: docker build -t ${DOCKER_USERNAME}/oc-lettings:latest .
      - run:
          name: Push docker image
          command: |
              echo ${DOCKER_PASSWORD} | docker login -u ${DOCKER_LOGIN} -p ${DOCKER_PASSWORD}
              docker push ${DOCKER_USERNAME}/oc-lettings:latest 

  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Deploy to Render
          command: |
            curl -X POST ${HOOK_RENDER} \
              -H "Content-Type: application/json" \
              -d '{"imageTag": "docker.io/${DOCKERHUB_USERNAME}/oc-lettings:latest", "clearCache": false}'

workflows:
  version: 2
  test-build-deploy:
    jobs:
      - pytest
      - flake8
      - build-and-push-docker:
          requires:
            - pytest
            - flake8
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build-and-push-docker
          filters:
            branches:
              only: master